name: terraform-synthetics-canary

on:
  push:
    branches: [ "main" ]
    paths:
      # - "canaries/**"
      # - ".github/workflows/terraform-synthetics-canary.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - "canaries/**"
      - ".github/workflows/terraform-synthetics-canary.yml"
  workflow_dispatch: {}

permissions:
  contents: read

env:
  TF_VERSION: "1.6.6"
  WORKDIR: canaries
  AWS_REGION: "us-east-1"
  TFVARS_FILE: "sandbox.tfvars"   # change if your file name differs
  TF_IN_AUTOMATION: "1"

jobs:
  plan:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    env:
      AKI: ${{ vars.AWS_ACCESS_KEY_ID }}
      SAK: ${{ vars.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v4

      - name: Validate repo variables
        run: |
          set -euo pipefail
          [ -n "${AKI:-}" ] || { echo "Missing repo variable AWS_ACCESS_KEY_ID"; exit 1; }
          [ -n "${SAK:-}" ] || { echo "Missing repo variable AWS_SECRET_ACCESS_KEY"; exit 1; }
          [ -n "${AWS_REGION:-}" ] || { echo "Missing AWS_REGION (env or Variable)"; exit 1; }

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ env.AKI }}
          aws-secret-access-key: ${{ env.SAK }}
          aws-region:            ${{ env.AWS_REGION }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Sanity check folder & files
        run: |
          set -euo pipefail
          ls -la
          ls -la "${WORKDIR}"
          [ -f "${WORKDIR}/main.tf" ] || { echo "main.tf missing under ${WORKDIR}"; exit 1; }
          [ -f "${WORKDIR}/variables.tf" ] || { echo "variables.tf missing under ${WORKDIR}"; exit 1; }
          [ -f "${WORKDIR}/${TFVARS_FILE}" ] || { echo "${TFVARS_FILE} missing under ${WORKDIR}"; exit 1; }

      - run: terraform fmt -check -recursive
        working-directory: ${{ env.WORKDIR }}

      - run: terraform init -input=false
        working-directory: ${{ env.WORKDIR }}

      - run: terraform validate -no-color
        working-directory: ${{ env.WORKDIR }}

      - run: terraform plan -input=false -no-color -out=tfplan -var-file="${TFVARS_FILE}"
        working-directory: ${{ env.WORKDIR }}

      - uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ${{ env.WORKDIR }}/tfplan

  apply:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      AKI: ${{ vars.AWS_ACCESS_KEY_ID }}
      SAK: ${{ vars.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v4

      - name: Validate repo variables
        run: |
          set -euo pipefail
          [ -n "${AKI:-}" ] || { echo "Missing repo variable AWS_ACCESS_KEY_ID"; exit 1; }
          [ -n "${SAK:-}" ] || { echo "Missing repo variable AWS_SECRET_ACCESS_KEY"; exit 1; }
          [ -n "${AWS_REGION:-}" ] || { echo "Missing AWS_REGION (env or Variable)"; exit 1; }

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ env.AKI }}
          aws-secret-access-key: ${{ env.SAK }}
          aws-region:            ${{ env.AWS_REGION }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Sanity check folder & files
        run: |
          set -euo pipefail
          ls -la "${WORKDIR}"
          [ -f "${WORKDIR}/main.tf" ] || { echo "main.tf missing under ${WORKDIR}"; exit 1; }
          [ -f "${WORKDIR}/variables.tf" ] || { echo "variables.tf missing under ${WORKDIR}"; exit 1; }
          [ -f "${WORKDIR}/${TFVARS_FILE}" ] || { echo "${TFVARS_FILE} missing under ${WORKDIR}"; exit 1; }

      - run: terraform init -input=false
        working-directory: ${{ env.WORKDIR }}

      - run: terraform plan -input=false -no-color -out=tfplan -var-file="${TFVARS_FILE}"
        working-directory: ${{ env.WORKDIR }}

      - run: terraform apply -input=false -auto-approve -var-file="${TFVARS_FILE}"
        working-directory: ${{ env.WORKDIR }}
